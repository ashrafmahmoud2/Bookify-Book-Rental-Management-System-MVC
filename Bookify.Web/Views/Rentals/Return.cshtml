@model RentalReturnFormViewModel


@{
	ViewData["Title"] = "Rental Rental";
}

<div class="card shadow-sm  border border-primary border-2  ">
	<div class="card-header">
		<h3 class="card-title">
			<div class="symbol symbol-35px me-2">
				<div class="symbol-label fs-2 fw-semibold text-success"><i class="fas fa-pen-nib fs-3  me-2 text-primary"></i></div>
			</div>
			Rental Details
		</h3>

	</div>
</div>



@if (Model.Copies.All(c => c.ReturnDate.HasValue))
{
	<div class="alert bg-light-info border border-info border-3 border-dashed d-flex flex-column flex-sm-row w-100 p-5 mt-10
	">
		<!--begin::Icon-->
		<!--begin::Svg Icon | path: icons/duotune/general/gen007.svg-->
		<span class="svg-icon svg-icon-2hx svg-icon-info me-4 mb-5 mb-sm-0">
			<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
				<path opacity="0.3" d="M12 22C13.6569 22 15 20.6569 15 19C15 17.3431 13.6569 16 12 16C10.3431 16 9 17.3431 9 19C9 20.6569 10.3431 22 12 22Z" fill="currentColor"></path>
				<path d="M19 15V18C19 18.6 18.6 19 18 19H6C5.4 19 5 18.6 5 18V15C6.1 15 7 14.1 7 13V10C7 7.6 8.7 5.6 11 5.1V3C11 2.4 11.4 2 12 2C12.6 2 13 2.4 13 3V5.1C15.3 5.6 17 7.6 17 10V13C17 14.1 17.9 15 19 15ZM11 10C11 9.4 11.4 9 12 9C12.6 9 13 8.6 13 8C13 7.4 12.6 7 12 7C10.3 7 9 8.3 9 10C9 10.6 9.4 11 10 11C10.6 11 11 10.6 11 10Z" fill="currentColor"></path>
			</svg>
		</span>
		<!--end::Svg Icon-->
		<!--end::Icon-->
		<!--begin::Content-->
		<div class="d-flex flex-column pe-0 pe-sm-10 justify-content-center">
			<h5 class="mb-0">All Copies have been returned.</h5>
		</div>
		<!--end::Content-->
	</div>

}
else
{
	<form asp-controller="Rentals">
		<input type="hidden" asp-for="Id" />


		<!--begin::Card-->
		<div class="card pt-4 mb-6 mb-xl-9 mt-10">

			<!--begin::Card body-->

			<div class="card-body py-3">
				<div class="table-responsive">
					<!--begin::Table-->
					<table class="table align-middle gs-0 gy-4">
						<!--begin::Table head-->
						<thead>
							<tr class="fw-bold text-muted bg-light">
								<th class="ps-4 min-w-125px rounded-start">Book</th>
								<th class="ps-4 min-w-125px rounded-start">Start Date</th>
								<th class="min-w-125px">End Date</th>
								<th class="min-w-125px">Totlal Delay (Days)</th>
								<th class="min-w-150px">Extend Date</th>
								<th class="min-w-125px">Return Date</th>
								<th class="min-w-125px">Return </th>
								<th class="min-w-125px">Extend</th>
							</tr>
						</thead>
						<!--end::Table head-->
						<!--begin::Table body-->
						<tbody>

							@for (var i = 0; i < Model.Copies.Count; i++)
							{
								var copy = Model.Copies[i];
								<tr>
									<td class="d-flex align-items-center sorting_1">
										<div class="symbol symbol-50px overflow-hidden me-3">
											<a href="/Books/Details/3">
												<div class="symbol-label h-70px">
													<img src="@copy.BookCopy!.BookThumbnailUrl" alt="" class="w-100">
												</div>
											</a>
										</div>
										<div class="d-flex flex-column">
											<a href="/Books/Details/@copy.BookCopy.BookId" class="text-primary fw-bolder mb-1">@copy.BookCopy.BookTitle</a>
											<span>Edition #@copy.BookCopy.EditionNumber</span>
										</div>
									</td>

									<td>
										@copy?.RentalDate.ToString("d MMM, yyyy")
									</td>
									<td>
										@copy?.EndDate.ToString("d MMM, yyyy")
									</td>
									<td>
										@if (copy?.DelayInDays > 0)
										{
											<span class="badge badge-light-warning">@copy.DelayInDays day(s)</span>
										}
										else
										{
											<span class="badge badge-light-success">0 Day(s)</span>
										}
									</td>
									<td>
										@copy?.ExtendedOn?.ToString("d MMM, yyyy")
									</td>
									<td>
										@if (copy.ReturnDate.HasValue)
										{
											<span class="badge badge-light-warning">
												Returned on @copy.ReturnDate.Value.ToString("d MMM, yyyy")
											</span>
										}
										else
										{
											<span class="badge badge-light-danger">Not Returned</span>
										}
									</td>

									<td>
										<div class="form-check form-check-custom form-check-success form-check-solid">
											<input class="form-check-input" type="radio" value="true" asp-for="@Model.SelectedCopies[i].IsReturned" id="@($"{Model.SelectedCopies[i].Id}_true")" />
											<input type="hidden" asp-for="@Model.SelectedCopies[i].Id" id="@($"{Model.SelectedCopies[i].Id}true-id")" />

											<label class="form-check-label" for="@($"{Model.SelectedCopies[i].Id}_true")">
											</label>
										</div>
									</td>
									<td>
										<div class="form-check form-check-custom  form-check-solid">
											<input class="form-check-input" type="radio" value="false" asp-for="@Model.SelectedCopies[i].IsReturned"
												   id="@($"{Model.SelectedCopies[i].Id}_false")" disabled="@(Model.AllowExtend? null  :"disabled" )" />
											<input type="hidden" asp-for="@Model.SelectedCopies[i].Id" id="@($"{Model.SelectedCopies[i].Id}_false-id")" />
											<label class="form-check-label" for="@($"{Model.SelectedCopies[i].Id}_false")">
											</label>
										</div>
									</td>

								</tr>
							}

						</tbody>
						<!--end::Table body-->
					</table>
					<!--end::Table-->
					@if (Model.TotleDelayInDays > 0)
					{
						<div class="ps-4"  >
							<div class="form-check form-check-custom form-check-solid me-10">
								<input type="hidden" asp-for="TotleDelayInDays" />
								<input class="form-check-input " type="checkbox" value="" asp-for="@Model.PenaltyPaid" />
								<label class="form-check-label" asp-for="@Model.PenaltyPaid">
								</label>
							</div>
						</div>
					}
					<div asp-validation-summary="All" class="text-danger">
					</div>

					<div class="card-footer">
						<button type="submit" class="btn btn-primary me-30">Save</button>
					</div>


				</div>
			</div>
			<!--end::Card body-->
		</div>
		<!--end::Card-->
	</form>

}

@section Scripts
{
	<partial name="_ValidationScriptsPartial" />
}






